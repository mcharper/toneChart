{"version":3,"sources":["components/SwatchPalette/SwatchStyles.ts","components/SwatchPalette/SwatchPalette.tsx","models/Scales.ts","components/ScaleSelector/ScaleSelectorStyles.ts","components/ScaleSelector/ScaleSelector.tsx","components/OctaveSelector/OctaveSelectorStyles.ts","components/OctaveSelector/OctaveSelector.tsx","components/PianoKeyboard/PianoKeyboardStyles.ts","components/PianoKeyboard/PianoKeyboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","swatchPiece","fontFamily","fontSize","height","margin","marginTop","padding","textAlign","transition","width","SwatchPalette","palette","classes","Grid","container","className","map","swatch","item","style","backgroundColor","colour","label","scales","id","name","description","image","pattern","tile","maxHeight","maxWidth","ScaleSelector","onChange","GridList","scale","GridListTile","onClick","src","alt","GridListTileBar","title","subtitle","OctaveSelector","InputLabel","htmlFor","Slider","defaultValue","aria-labelledby","valueLabelDisplay","onChangeCommitted","ev","value","step","marks","min","max","PianoKeyboard","firstNote","MidiNumbers","fromNote","lastNote","keyboardShortcuts","KeyboardShortcuts","create","keyboardConfig","HOME_ROW","noteRange","first","last","playNote","midiNumber","stopNote","App","initialPalette","useState","octave","setOctave","setRoot","setScale","setPalette","savedPalettes","useEffect","offsetAngle","lightness","swatchColours","scaleIndex","hue","Color","hsl","hex","string","direction","spacing","justify","alignItems","xs","midiNote","savedPalette","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d45d80e.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {},\r\n  swatchPiece: {\r\n    fontFamily: \"Arial Narrow\",\r\n    fontSize: \"2vh\",\r\n    height: \"12vh\",\r\n    margin: \"0.5vh\",\r\n    marginTop: \"2vh\",\r\n    padding: \"1vh\",\r\n    textAlign: \"center\",\r\n    transition: \"background-color 1s\",\r\n    width: \"12vh\",\r\n  },\r\n});\r\n","import { Grid } from \"@material-ui/core\";\r\n\r\nimport { SwatchPaletteProps } from \"./SwatchPaletteProps\";\r\nimport { useStyles } from \"./SwatchStyles\";\r\n\r\nexport const SwatchPalette = ({ palette }: SwatchPaletteProps): JSX.Element => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      {palette.map((swatch) => {\r\n        return (\r\n          <Grid\r\n            item\r\n            className={classes.swatchPiece}\r\n            style={{\r\n              backgroundColor: swatch.colour,\r\n            }}\r\n          >\r\n            <span>{swatch.label}</span>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n","import { Scale } from \"./Scale\";\r\n\r\nexport const scales: Array<Scale> = [\r\n  {\r\n    id: 0,\r\n    name: \"Major\",\r\n    description: \"Happy, majestic\",\r\n    image: \"major.jpg\",\r\n    pattern: [0, 2, 4, 5, 7, 9, 11],\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Natural Minor\",\r\n    description: \"Sentimental, tragic\",\r\n    image: \"natural minor.jpg\",\r\n    pattern: [0, 2, 3, 5, 7, 8, 10],\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Dorian\",\r\n    description: \"A little melancholy but hopeful\",\r\n    image: \"dorian.jpg\",\r\n    pattern: [0, 2, 3, 5, 7, 9, 10],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Pentatonic Minor\",\r\n    description: \"Jazz, folk, rock solos\",\r\n    image: \"Pentatonic minor.jpg\",\r\n    pattern: [0, 3, 5, 7, 10],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Pentatonic Major\",\r\n    description: \"Cheerful Eastern sound\",\r\n    image: \"Pentatonic major.jpg\",\r\n    pattern: [0, 2, 4, 7, 9],\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Phrygian\",\r\n    description: \"Tense, dark, Spanish sound\",\r\n    image: \"phrygian.jpg\",\r\n    pattern: [0, 1, 3, 5, 7, 8, 10],\r\n  },\r\n];\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {},\r\n  tile: {\r\n    maxHeight: \"30vh\",\r\n    maxWidth: \"30vh\",\r\n  },\r\n});\r\n","import GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\n\r\nimport { ScaleSelectorProps } from \"./ScaleSelectorProps\";\r\nimport { scales } from \"../../models/Scales\";\r\nimport { Scale } from \"../../models/Scale\";\r\nimport { useStyles } from \"./ScaleSelectorStyles\";\r\n\r\nexport const ScaleSelector = ({\r\n  onChange,\r\n}: ScaleSelectorProps): JSX.Element => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <GridList className={classes.root}>\r\n      {scales.map((scale: Scale) => (\r\n        <GridListTile\r\n          key={scale.id}\r\n          onClick={() => onChange(scale)}\r\n          className={classes.tile}\r\n        >\r\n          <img src={scale.image} alt={scale.image} />\r\n          <GridListTileBar title={scale.name} subtitle={scale.description} />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: \"30vw\",\r\n  },\r\n});\r\n","import { FormControl, InputLabel, Select, Slider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { OctaveSelectorProps } from \"./OctaveSelectorProps\";\r\nimport { useStyles } from \"./OctaveSelectorStyles\";\r\n\r\nexport const OctaveSelector = ({\r\n  onChange,\r\n}: OctaveSelectorProps): JSX.Element => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <InputLabel htmlFor=\"octave\">Octave</InputLabel>\r\n      <Slider\r\n        name=\"octave\"\r\n        id=\"octave\"\r\n        defaultValue={4}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"on\"\r\n        onChangeCommitted={(ev, value: any) => {\r\n          onChange(value);\r\n        }}\r\n        step={1}\r\n        marks\r\n        min={1}\r\n        max={8}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    maxHeight: \"40vh\",\r\n    maxWidth: \"30vw\",\r\n  },\r\n});\r\n","import { Piano, KeyboardShortcuts, MidiNumbers } from \"react-piano\";\r\nimport \"react-piano/dist/styles.css\";\r\n\r\nimport { PianoKeyboardProps } from \"./PianoKeyboardProps\";\r\nimport { useStyles } from \"./PianoKeyboardStyles\";\r\n\r\nexport const PianoKeyboard = ({\r\n  onChange,\r\n}: PianoKeyboardProps): JSX.Element => {\r\n  const classes = useStyles();\r\n\r\n  const firstNote = MidiNumbers.fromNote(\"c4\");\r\n  const lastNote = MidiNumbers.fromNote(\"b4\");\r\n  const keyboardShortcuts = KeyboardShortcuts.create({\r\n    firstNote: firstNote,\r\n    lastNote: lastNote,\r\n    keyboardConfig: KeyboardShortcuts.HOME_ROW,\r\n  });\r\n\r\n  return (\r\n    <Piano\r\n      className={classes.root}\r\n      noteRange={{ first: firstNote, last: lastNote }}\r\n      playNote={(midiNumber: number) => {\r\n        // Play a given note - see notes below\r\n        onChange(midiNumber);\r\n      }}\r\n      stopNote={(midiNumber: number) => {\r\n        // Stop playing a given note - see notes below\r\n      }}\r\n      width={500}\r\n      keyboardShortcuts={keyboardShortcuts}\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Color from \"color\";\n\nimport { SwatchPalette } from \"./components/SwatchPalette/SwatchPalette\";\nimport { Swatch } from \"./models/Swatch\";\nimport { ScaleSelector } from \"./components/ScaleSelector/ScaleSelector\";\nimport { OctaveSelector } from \"./components/OctaveSelector/OctaveSelector\";\nimport { PianoKeyboard } from \"./components/PianoKeyboard/PianoKeyboard\";\nimport \"./App.css\";\nimport { MidiPlayer } from \"./components/MidiPlayer/MidiPlayer\";\n\nfunction App() {\n  const initialPalette: Array<Swatch> = [\n    {\n      label: \"A\",\n      colour: \"hsl(0, 75%, 75%)\",\n    },\n    {\n      label: \"1\",\n      colour: \"hsl(120, 75%, 75%)\",\n    },\n    {\n      label: \"1\",\n      colour: \"hsl(240, 75%, 75%)\",\n    },\n  ];\n\n  const [octave, setOctave] = useState(4);\n  const [root, setRoot] = useState(0);\n  const [scale, setScale] = useState({\n    name: \"Chromatic\",\n    pattern: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n  });\n  const [palette, setPalette] = useState(initialPalette);\n  const [savedPalettes, setSavedPalettes] = useState([initialPalette]);\n\n  useEffect(() => {\n    const offsetAngle = root * 30;\n    const lightness = octave * 10;\n    const swatchColours = scale.pattern.map((scaleIndex) => {\n      const hue = (offsetAngle + scaleIndex * 30) % 360;\n      const colour = Color.hsl(hue, 75, lightness);\n      const hex = colour.hex();\n      return {\n        label: hex,\n        colour: colour.string(),\n      };\n    });\n    setPalette(swatchColours);\n  }, [octave, root, scale]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Tone Chart</h1>\n        <h2>Experiments in Sound and Colour</h2>\n      </header>\n\n      <Grid\n        container\n        direction=\"row\"\n        spacing={4}\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item xs={12}>\n          <SwatchPalette palette={palette} />\n        </Grid>\n        <Grid item xs={6}>\n          <ScaleSelector\n            onChange={(scale) => {\n              setScale(scale);\n            }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container>\n            <Grid item xs={12}>\n              <OctaveSelector\n                onChange={(octave: number) => setOctave(octave)}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <label>Root Note</label>\n              <PianoKeyboard\n                onChange={(midiNote) => {\n                  setRoot(midiNote % 12);\n                }}\n              />\n              {/* <MidiPlayer\n                midiSequence={scale.pattern.map((n) => {\n                  return n + 60;\n                })}\n              ></MidiPlayer> */}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          {savedPalettes.map((savedPalette) => {\n            <SwatchPalette palette={savedPalette} />;\n          })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}